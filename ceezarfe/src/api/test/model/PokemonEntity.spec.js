/**
 * Pokemon Ceezr
 * The Ceezr pokemon API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PokemonCeezr);
  }
}(this, function(expect, PokemonCeezr) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PokemonCeezr.PokemonEntity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PokemonEntity', function() {
    it('should create an instance of PokemonEntity', function() {
      // uncomment below and update the code to test PokemonEntity
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be.a(PokemonCeezr.PokemonEntity);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property type1 (base name: "type_1")', function() {
      // uncomment below and update the code to test the property type1
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property type2 (base name: "type_2")', function() {
      // uncomment below and update the code to test the property type2
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property hP (base name: "hP")', function() {
      // uncomment below and update the code to test the property hP
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property attack (base name: "attack")', function() {
      // uncomment below and update the code to test the property attack
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property defense (base name: "defense")', function() {
      // uncomment below and update the code to test the property defense
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property spAtk (base name: "sp_Atk")', function() {
      // uncomment below and update the code to test the property spAtk
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property spDef (base name: "sp_Def")', function() {
      // uncomment below and update the code to test the property spDef
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property speed (base name: "speed")', function() {
      // uncomment below and update the code to test the property speed
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property generation (base name: "generation")', function() {
      // uncomment below and update the code to test the property generation
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property legendary (base name: "legendary")', function() {
      // uncomment below and update the code to test the property legendary
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new PokemonCeezr.PokemonEntity();
      //expect(instance).to.be();
    });

  });

}));
