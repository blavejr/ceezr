/**
 * Pokemon Ceezr
 * The Ceezr pokemon API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdatePokemonDto model module.
 * @module model/UpdatePokemonDto
 * @version 1.0
 */
class UpdatePokemonDto {
    /**
     * Constructs a new <code>UpdatePokemonDto</code>.
     * @alias module:model/UpdatePokemonDto
     */
    constructor() { 
        
        UpdatePokemonDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePokemonDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePokemonDto} obj Optional instance to populate.
     * @return {module:model/UpdatePokemonDto} The populated <code>UpdatePokemonDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePokemonDto();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type_1')) {
                obj['type_1'] = ApiClient.convertToType(data['type_1'], 'String');
            }
            if (data.hasOwnProperty('type_2')) {
                obj['type_2'] = ApiClient.convertToType(data['type_2'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('hP')) {
                obj['hP'] = ApiClient.convertToType(data['hP'], 'Number');
            }
            if (data.hasOwnProperty('attack')) {
                obj['attack'] = ApiClient.convertToType(data['attack'], 'Number');
            }
            if (data.hasOwnProperty('defense')) {
                obj['defense'] = ApiClient.convertToType(data['defense'], 'Number');
            }
            if (data.hasOwnProperty('sp_Atk')) {
                obj['sp_Atk'] = ApiClient.convertToType(data['sp_Atk'], 'Number');
            }
            if (data.hasOwnProperty('sp_Def')) {
                obj['sp_Def'] = ApiClient.convertToType(data['sp_Def'], 'Number');
            }
            if (data.hasOwnProperty('speed')) {
                obj['speed'] = ApiClient.convertToType(data['speed'], 'Number');
            }
            if (data.hasOwnProperty('generation')) {
                obj['generation'] = ApiClient.convertToType(data['generation'], 'Number');
            }
            if (data.hasOwnProperty('legendary')) {
                obj['legendary'] = ApiClient.convertToType(data['legendary'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePokemonDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePokemonDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type_1'] && !(typeof data['type_1'] === 'string' || data['type_1'] instanceof String)) {
            throw new Error("Expected the field `type_1` to be a primitive type in the JSON string but got " + data['type_1']);
        }
        // ensure the json data is a string
        if (data['type_2'] && !(typeof data['type_2'] === 'string' || data['type_2'] instanceof String)) {
            throw new Error("Expected the field `type_2` to be a primitive type in the JSON string but got " + data['type_2']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
UpdatePokemonDto.prototype['name'] = undefined;

/**
 * @member {String} type_1
 */
UpdatePokemonDto.prototype['type_1'] = undefined;

/**
 * @member {String} type_2
 */
UpdatePokemonDto.prototype['type_2'] = undefined;

/**
 * @member {Number} total
 */
UpdatePokemonDto.prototype['total'] = undefined;

/**
 * @member {Number} hP
 */
UpdatePokemonDto.prototype['hP'] = undefined;

/**
 * @member {Number} attack
 */
UpdatePokemonDto.prototype['attack'] = undefined;

/**
 * @member {Number} defense
 */
UpdatePokemonDto.prototype['defense'] = undefined;

/**
 * @member {Number} sp_Atk
 */
UpdatePokemonDto.prototype['sp_Atk'] = undefined;

/**
 * @member {Number} sp_Def
 */
UpdatePokemonDto.prototype['sp_Def'] = undefined;

/**
 * @member {Number} speed
 */
UpdatePokemonDto.prototype['speed'] = undefined;

/**
 * @member {Number} generation
 */
UpdatePokemonDto.prototype['generation'] = undefined;

/**
 * @member {Boolean} legendary
 */
UpdatePokemonDto.prototype['legendary'] = undefined;






export default UpdatePokemonDto;

